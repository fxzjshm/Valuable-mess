diff --git a/boinc/config.h.cmake.in b/boinc/config.h.cmake.in
index 5bb648b..8fe9d06 100644
--- a/boinc/config.h.cmake.in
+++ b/boinc/config.h.cmake.in
@@ -334,6 +334,7 @@
 #cmakedefine01 _LARGE_FILES
 
 #if HAVE_SOCKLEN_T
+typedef int socklen_t;
 typedef socklen_t BOINC_SOCKLEN_T;
 #endif
 
diff --git a/milkyway/include/milkyway_extra.h b/milkyway/include/milkyway_extra.h
index d6e3dc6..294131f 100644
--- a/milkyway/include/milkyway_extra.h
+++ b/milkyway/include/milkyway_extra.h
@@ -79,7 +79,7 @@ typedef char mwbool;
   #define LLU "%I64u"
 #else
   #define ZU "%zu"
-  #define LLU "%"PRIu64
+  #define LLU "%" PRIu64
 #endif /* _WIN32 */
 
 #endif /* _MILKYWAY_EXTRA_H_ */
diff --git a/popt/include/system.h b/popt/include/system.h
index e971f76..49f3b9b 100644
--- a/popt/include/system.h
+++ b/popt/include/system.h
@@ -176,7 +176,7 @@ char * xstrdup (const char *str)
 
 #if !defined(HAVE_STPCPY)
 /* Copy SRC to DEST, returning the address of the terminating '\0' in DEST.  */
-static inline char * stpcpy (char *dest, const char * src) {
+/*static inline char * stpcpy (char *dest, const char * src) {
     register char *d = dest;
     register const char *s = src;
 
@@ -184,7 +184,7 @@ static inline char * stpcpy (char *dest, const char * src) {
 	*d++ = *s;
     while (*s++ != '\0');
     return d - 1;
-}
+}*/
 #endif
 
 /* Memory allocation via macro defs to get meaningful locations from mtrace() */
diff --git a/separation/CMakeLists.txt b/separation/CMakeLists.txt
index f27398e..119a8fa 100644
--- a/separation/CMakeLists.txt
+++ b/separation/CMakeLists.txt
@@ -51,6 +51,8 @@ if(SYSTEM_IS_PPC)
   set(CMAKE_C_FLAGS "-maltivec -mfused-madd -mhard-float -mabi=altivec ${CMAKE_C_FLAGS}")
 endif()
 
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-format-security")
+
 option(SEPARATION_STATIC "Build separation as fully static binary" OFF)
 mark_as_advanced(SEPARATION_STATIC)
 
@@ -320,4 +322,3 @@ elseif(NOT MILKYWAY_IPHONE_APP)
   install(TARGETS milkyway_separation
             RUNTIME DESTINATION bin)
 endif()
-
